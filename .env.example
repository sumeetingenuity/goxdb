# --- Server Configuration ---
HTTP_ADDR=localhost:8081
GRPC_ADDR=localhost:50053
HTTP_READ_TIMEOUT=10s
HTTP_WRITE_TIMEOUT=10s

# --- Data & Paths ---
DATA_DIR=data
# LLAMA_MODEL_PATH should point to the directory containing your GGUF models
LLAMA_MODEL_PATH=D:/go_db/pkg/llama.cpp/models
# LLAMA_EMBEDDING_PATH and LLAMA_PATH might be specific to older llama.cpp setups, verify if needed
LLAMA_EMBEDDING_PATH=D:/go_db/pkg/llama.cpp/llama-b4924-bin-win-avx-x64/llama-embedding.exe
LLAMA_PATH=D:/go_db/pkg/llama.cpp/llama-b4924-bin-win-avx-x64/llama-run.exe

# --- Security ---
TLS_ENABLED=false # Set to true to enable TLS for HTTP and gRPC
TLS_CERT_FILE= # Path to your TLS certificate file (e.g., server.crt)
TLS_KEY_FILE=  # Path to your TLS private key file (e.g., server.key)
# IMPORTANT: Change this in your actual .env file for production!
JWT_SECRET=default-insecure-secret-key
# CORS_ALLOWED_ORIGINS=* # Example: "http://localhost:3000,https://yourapp.com" (Comma-separated, no spaces)
CORS_ALLOWED_ORIGINS=https://www.goxdb.com,http://localhost:5173

# --- Embedding Configuration ---
DEFAULT_EMBEDDING_MODEL=mxbai-embed-large-v1
# Embedding Provider API Keys (only needed if using external providers)
OPENAI_API_KEY=your_openai_api_key
COHERE_API_KEY=your_cohere_api_key
MISTRAL_API_KEY=your_mistral_api_key
ANTHROPIC_API_KEY=your_anthropic_api_key
GOOGLE_API_KEY=your_google_api_key

# --- Performance & Resource Management ---
WORKER_POOL_SIZE=10 # Number of background workers (defaults based on CPU if not set)
WORKER_POOL_QUEUE_SIZE=100 # Size of the queue for each worker pool (defaults based on worker size if not set)
CACHE_SIZE=1000 # Number of items (e.g., embeddings) to keep in LRU cache
RATE_LIMITER_RATE=100 # Max requests per second for SearchService operations
RATE_LIMITER_BURST=50 # Burst allowance for rate limiter
MAX_CONCURRENT_OPS=100 # Max concurrent SearchService operations (semaphore limit)

# --- Raft Configuration ---
# RAFT_NODE_ID should be unique for each node in the cluster
RAFT_NODE_ID=node1
# RAFT_DIR is derived from DATA_DIR by default (e.g., data/raft)
# RAFT_DIR=./go_db/raft_data
RAFT_ADDR=127.0.0.1:11000 # Address for Raft communication
# RAFT_BOOTSTRAP should only be true for the very first node when initializing a new cluster
RAFT_BOOTSTRAP=false
# RAFT_IS_LEADER is usually determined by the cluster, but can be forced for initial bootstrap (use with caution)
RAFT_IS_LEADER=false
# RAFT_HTTP_ADDR is deprecated/unused in current main.go setup, use HTTP_ADDR instead
# RAFT_HTTP_ADDR=127.0.0.1:11001

# --- Local Model Configuration (Example for llama.cpp) ---
# These might be less relevant if using the integrated embedding manager effectively
# USE_GPU=false
# CONTEXT_LENGTH=4096
# TEMPERATURE=0.7
# THREADS=4
# BATCH_SIZE=512

# --- Storage Configuration ---
# STORAGE_PROVIDER_TYPE: "internal" or "s3" (extend with "gcs", "azure" later)
STORAGE_PROVIDER_TYPE=internal
# S3_PRESIGNED_URL_EXPIRY: Default expiry for download URLs (e.g., "1h", "15m")
S3_PRESIGNED_URL_EXPIRY=1h

# --- S3 Provider Configuration (only if STORAGE_PROVIDER_TYPE=s3) ---
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=
S3_BUCKET_NAME=
# S3_ENDPOINT_URL (optional, for S3-compatible services like MinIO, e.g., "http://localhost:9000")
S3_ENDPOINT_URL=
# S3_FORCE_PATH_STYLE (optional, set to "true" for MinIO if needed)
S3_FORCE_PATH_STYLE=false
